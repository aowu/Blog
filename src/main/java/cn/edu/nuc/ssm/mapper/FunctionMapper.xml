<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nuc.ssm.dao.FunctionMapper">

<!-- +++++++++++++++++++++++++++++++防覆盖护体盾+++++++++++++++++++++++++++++++++++++++ -->
  <resultMap id="BaseResultMap" type="cn.edu.nuc.ssm.model.Function">
    <id column="funid" jdbcType="INTEGER" property="funid" />
    <result column="funname" jdbcType="VARCHAR" property="funname" />
    <result column="funurl" jdbcType="VARCHAR" property="funurl" />
    <result column="funsta" jdbcType="INTEGER" property="funsta" />
    <result column="funpid" jdbcType="INTEGER" property="funpid" />
    <result column="funpname" jdbcType="VARCHAR" property="funpname" />
  </resultMap>
  <sql id="Base_Column_List">
    funid, funname, funurl, funsta, funpid, funpname
  </sql>
  <select id="selectByFunid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from function
    where funid = #{funid,jdbcType=INTEGER} 
    and funsta =1
  </select>
  
  <select id="selectALLFunid" resultType="Function">
    select 
    <include refid="Base_Column_List" />
    from function
    where funsta = 1
  </select>
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from function
    where funid = #{funid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.nuc.ssm.model.Function">
    insert into function (funid, funname, funurl, 
      funsta, funpid, funpname
      )
    values (#{funid,jdbcType=INTEGER}, #{funname,jdbcType=VARCHAR}, #{funurl,jdbcType=VARCHAR}, 
      #{funsta,jdbcType=INTEGER}, #{funpid,jdbcType=INTEGER}, #{funpname,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.nuc.ssm.model.Function">
    insert into function
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="funid != null">
        funid,
      </if>
      <if test="funname != null">
        funname,
      </if>
      <if test="funurl != null">
        funurl,
      </if>
      <if test="funsta != null">
        funsta,
      </if>
      <if test="funpid != null">
        funpid,
      </if>
      <if test="funpname != null">
        funpname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="funid != null">
        #{funid,jdbcType=INTEGER},
      </if>
      <if test="funname != null">
        #{funname,jdbcType=VARCHAR},
      </if>
      <if test="funurl != null">
        #{funurl,jdbcType=VARCHAR},
      </if>
      <if test="funsta != null">
        #{funsta,jdbcType=INTEGER},
      </if>
      <if test="funpid != null">
        #{funpid,jdbcType=INTEGER},
      </if>
      <if test="funpname != null">
        #{funpname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nuc.ssm.model.Function">
    update function
    <set>
      <if test="funname != null">
        funname = #{funname,jdbcType=VARCHAR},
      </if>
      <if test="funurl != null">
        funurl = #{funurl,jdbcType=VARCHAR},
      </if>
      <if test="funsta != null">
        funsta = #{funsta,jdbcType=INTEGER},
      </if>
      <if test="funpid != null">
        funpid = #{funpid,jdbcType=INTEGER},
      </if>
      <if test="funpname != null">
        funpname = #{funpname,jdbcType=VARCHAR},
      </if>
    </set>
    where funid = #{funid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.nuc.ssm.model.Function">
    update function
    set funname = #{funname,jdbcType=VARCHAR},
      funurl = #{funurl,jdbcType=VARCHAR},
      funsta = #{funsta,jdbcType=INTEGER},
      funpid = #{funpid,jdbcType=INTEGER},
      funpname = #{funpname,jdbcType=VARCHAR}
    where funid = #{funid,jdbcType=INTEGER}
  </update>
  <!-- +++++++++++++++++++++++++++++++防覆盖护体盾+++++++++++++++++++++++++++++++++++++++ -->
</mapper>